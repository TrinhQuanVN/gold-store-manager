// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  //output   = "../app/generated/prisma"
}

// datasource db {
//   provider = "sqlite"
//   url      = env("DATABASE_URL")
// }

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model ContactGroup {
  id          Int       @id @default(autoincrement())
  name        String
  description String?
  color       String?   @default("gray") //color for ContactGroupBadge
  createdAt   DateTime  @default(now())
  updatedAt   DateTime? @updatedAt

  contacts Contact[]
}

model Contact {
  id           Int          @id @default(autoincrement())
  groupId      Int          @default(1) // Default to group with id 1
  group        ContactGroup @relation(fields: [groupId], references: [id], onDelete: Cascade)
  name         String
  unaccentName String
  address      String?
  cccd         String?
  taxcode      String?
  phone        String?
  note         String?
  createdAt    DateTime     @default(now())
  updatedAt    DateTime?    @updatedAt
}

model JewelryType {
  id          Int       @id @default(autoincrement())
  name        String
  goldPercent Float     @default(0.0) // Gold percentage for the type
  description String?
  color       String?   @default("gray") //color for GoldKaraBadge
  createdAt   DateTime  @default(now())
  updatedAt   DateTime? @updatedAt

  jewelry Jewelry[]
}

model JewerlyCategory {
  id          Int       @id @default(autoincrement())
  name        String
  description String?
  color       String?   @default("gray") //color for JewerlyCategoryBadge
  createdAt   DateTime  @default(now())
  updatedAt   DateTime? @updatedAt

  jewelry Jewelry[]
}

model Jewelry {
  id         Int     @id @default(autoincrement())
  name       String
  goldWeight Float
  inStock    Boolean @default(true)

  categoryId    Int
  category      JewerlyCategory @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  jewelryTypeId Int
  jewelryType   JewelryType     @relation(fields: [jewelryTypeId], references: [id], onDelete: Cascade)

  gemWeight   Float   @default(0)
  totalWeight Float   @default(0)
  gemName     String?

  description String?
  madeIn      String? @default("Việt Nam") // Default to "Việt Nam"
  size        String?

  reportXNTId String?

  supplierId String? //Mã trang sức của nhà

  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
}

model TaxPayer {
  id      Int     @id @default(autoincrement())
  name    String // Tên người nộp thuế
  taxCode String  @unique // Mã số thuế
  address String? // Địa chỉ người nộp thuế

  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt

  reportXNTHeaders ReportXNTHeader[]
}

model ReportXNTHeader {
  id      Int    @id @default(autoincrement())
  name    String
  quarter Int //quý
  year    Int //năm

  taxPayerId Int //Mã số thuế của người nộp thuế
  taxPayer   TaxPayer @relation(fields: [taxPayerId], references: [id], onDelete: Cascade)

  startDate DateTime //Ngày bắt đầu kỳ báo cáo
  endDate   DateTime //Ngày kết thúc kỳ báo cáo

  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt

  reportXNTs ReportXNT[]
}

model ReportXNT {
  id       String          @id
  headerId Int
  header   ReportXNTHeader @relation(fields: [headerId], references: [id], onDelete: Cascade)

  name             String
  unit             String? @default("chỉ")
  tonDauKyQuantity Float   @default(0)
  tonDauKyValue    Float   @default(0)

  nhapQuantity Float @default(0)
  nhapValue    Float @default(0)

  xuatQuantity Float @default(0)
  xuatValue    Float @default(0) //Xuất trong kỳ tính bằng xuatDonGia * xuatSoLuong

  xuatDonGia Float @default(0) //đơn giá xuất trong kỳ tính bàng (tonDauKyValue + nhapValue) / (tonDauKyQuantity + nhapQuantity)

  tonCuoiKyQuantity Float @default(0) // Tồn cuối kỳ tính bằng tonDauKyQuantity + nhapQuantity - xuatQuantity
  tonCuoiKyValue    Float @default(0) // Tồn cuối kỳ tính bằng tonDauKyValue + nhapValue - xuatValue
}
