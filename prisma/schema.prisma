generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model ContactGroup {
  id          Int       @id @default(autoincrement())
  name        String
  description String?
  color       String?   @default("gray")
  createdAt   DateTime  @default(now())
  updatedAt   DateTime? @updatedAt
  contacts    Contact[]
}

model Contact {
  id                 Int                 @id @default(autoincrement())
  groupId            Int                 @default(1)
  name               String
  unaccentName       String
  address            String?
  cccd               String?
  taxcode            String?
  phone              String?
  note               String?
  createdAt          DateTime            @default(now())
  updatedAt          DateTime?           @updatedAt
  group              ContactGroup        @relation(fields: [groupId], references: [id], onDelete: Cascade)
  transactionHeaders TransactionHeader[]
}

model JewelryType {
  id          Int       @id @default(autoincrement())
  name        String
  goldPercent Float     @default(0.0)
  description String?
  color       String?   @default("gray")
  createdAt   DateTime  @default(now())
  updatedAt   DateTime? @updatedAt
  jewelry     Jewelry[]
}

model JewelryCategory {
  id          Int       @id @default(autoincrement())
  name        String
  description String?
  color       String?   @default("gray")
  createdAt   DateTime  @default(now())
  updatedAt   DateTime? @updatedAt
  jewelry     Jewelry[]
}

model Jewelry {
  id                 Int                        @id @default(autoincrement())
  name               String
  goldWeight         Decimal                    @default(0) @db.Decimal(6, 4)
  categoryId         Int
  gemWeight          Decimal                    @default(0) @db.Decimal(6, 4)
  totalWeight        Decimal                    @default(0) @db.Decimal(6, 4)
  gemName            String?
  description        String?
  madeIn             String?                    @default("Việt Nam")
  size               String?
  supplierId         String?
  createdAt          DateTime                   @default(now())
  updatedAt          DateTime?                  @updatedAt
  typeId             Int
  reportProductCode  String?
  category           JewelryCategory            @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  jewelryType        JewelryType                @relation(fields: [typeId], references: [id], onDelete: Cascade)
  transactionDetails JewelryTransactionDetail[]
}

model TaxPayer {
  id               Int               @id @default(autoincrement())
  name             String
  taxCode          String            @unique
  address          String?
  createdAt        DateTime          @default(now())
  updatedAt        DateTime?         @updatedAt
  reportXNTHeaders ReportXNTHeader[]
}

model ReportXNTHeader {
  id         Int              @id @default(autoincrement())
  name       String
  quarter    Int
  year       Int
  taxPayerId Int
  startDate  DateTime
  endDate    DateTime
  createdAt  DateTime         @default(now())
  updatedAt  DateTime?        @updatedAt
  group      ReportXNTGroup[]
  taxPayer   TaxPayer         @relation(fields: [taxPayerId], references: [id], onDelete: Cascade)
}

model ReportXNTGroup {
  id         Int             @id @default(autoincrement())
  name       String          @default("nhóm sản phẩm thuộc báo cáo")
  headerId   Int
  createdAt  DateTime        @default(now())
  updatedAt  DateTime?       @updatedAt
  stt        Int             @default(1)
  ReportXNTs ReportXNT[]
  header     ReportXNTHeader @relation(fields: [headerId], references: [id], onDelete: Cascade)
}

model ReportXNT {
  name              String         @default("sản phẩm thuộc báo")
  unit              String?        @default("chỉ")
  tonDauKyQuantity  Decimal        @default(0) @db.Decimal(9, 4)
  tonDauKyValue     Decimal        @default(0) @db.Decimal(13, 2)
  nhapQuantity      Decimal        @default(0) @db.Decimal(9, 4)
  nhapValue         Decimal        @default(0) @db.Decimal(13, 2)
  xuatQuantity      Decimal        @default(0) @db.Decimal(9, 4)
  xuatValue         Decimal        @default(0) @db.Decimal(13, 2)
  tonCuoiKyQuantity Decimal        @default(0) @db.Decimal(9, 4)
  tonCuoiKyValue    Decimal        @default(0) @db.Decimal(13, 2)
  groupId           Int            @default(1)
  stt               Int            @default(1)
  productCode       String?
  id                Int            @id @default(autoincrement())
  createdAt         DateTime       @default(now())
  updatedAt         DateTime?      @default(now()) @updatedAt
  xuatThucTe        Decimal        @default(0) @db.Decimal(13, 2)
  thue              Decimal        @default(0) @db.Decimal(13, 2)
  group             ReportXNTGroup @relation(fields: [groupId], references: [id], onDelete: Cascade)
}

model Gold {
  id                       Int                       @id @default(autoincrement())
  name                     String
  goldPercent              Float                     @default(0.0)
  description              String?
  createdAt                DateTime                  @default(now())
  updatedAt                DateTime?                 @updatedAt
  reportProductCode        String?
  goldInventoryAdjustments GoldInventoryAdjustment[]
  goldTransactionDetails   GoldTransactionDetail[]
}

model JewelryTransactionDetail {
  id                  Int               @id @default(autoincrement())
  jewelryId           Int
  price               Decimal           @default(0) @db.Decimal(8, 0)
  discount            Decimal           @default(0) @db.Decimal(8, 0)
  amount              Decimal           @default(0) @db.Decimal(11, 0)
  transactionHeaderId Int
  createdAt           DateTime          @default(now())
  updatedAt           DateTime?         @updatedAt
  jewelry             Jewelry           @relation(fields: [jewelryId], references: [id], onDelete: Cascade)
  transactionHeader   TransactionHeader @relation(fields: [transactionHeaderId], references: [id], onDelete: Cascade)
}

model GoldTransactionDetail {
  id                  Int               @id @default(autoincrement())
  goldId              Int
  price               Decimal           @default(0) @db.Decimal(8, 0)
  weight              Decimal           @default(0) @db.Decimal(8, 4)
  discount            Decimal           @default(0) @db.Decimal(8, 0)
  amount              Decimal           @db.Decimal(11, 0)
  transactionHeaderId Int
  createdAt           DateTime          @default(now())
  updatedAt           DateTime?         @updatedAt
  gold                Gold              @relation(fields: [goldId], references: [id], onDelete: Cascade)
  transactionHeader   TransactionHeader @relation(fields: [transactionHeaderId], references: [id], onDelete: Cascade)
}

model TransactionHeader {
  id                        Int                        @id @default(autoincrement())
  note                      String?
  isExport                  Boolean
  paymentMethode            PaymentMethode
  contactId                 Int
  createdAt                 DateTime                   @default(now())
  updatedAt                 DateTime?                  @updatedAt
  goldPrice                 Decimal                    @default(0) @db.Decimal(8, 0)
  goldTransactionDetails    GoldTransactionDetail[]
  jewelryTransactionDetails JewelryTransactionDetail[]
  paymentAmounts            PaymentDetail[]
  contact                   Contact                    @relation(fields: [contactId], references: [id], onDelete: Cascade)
}

model PaymentDetail {
  id                  Int               @id @default(autoincrement())
  amount              Decimal           @db.Decimal(11, 0)
  transactionHeaderId Int
  type                PaymentType
  createdAt           DateTime          @default(now())
  updatedAt           DateTime?         @updatedAt
  transactionHeader   TransactionHeader @relation(fields: [transactionHeaderId], references: [id], onDelete: Cascade)
}

model GoldPrice {
  id        Int       @id @default(autoincrement())
  name      String
  buy       Decimal   @db.Decimal(8, 0)
  sell      Decimal   @db.Decimal(8, 0)
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
}

model InventoryAdjustmentHeader {
  id              Int                       @id @default(autoincrement())
  note            String?
  isExport        Boolean
  createdAt       DateTime?                 @default(now())
  updatedAt       DateTime?                 @updatedAt
  goldAdjustments GoldInventoryAdjustment[]
}

model GoldInventoryAdjustment {
  id                 Int                       @id @default(autoincrement())
  goldId             Int
  weight             Decimal?                  @default(0) @db.Decimal(8, 4)
  adjustmentHeaderId Int
  createdAt          DateTime?                 @default(now())
  updatedAt          DateTime?                 @updatedAt
  header             InventoryAdjustmentHeader @relation(fields: [adjustmentHeaderId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  gold               Gold                      @relation(fields: [goldId], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

enum PaymentType {
  CK
  TM
}

enum PaymentMethode {
  CK
  TM
  CK_TM
}
